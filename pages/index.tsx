import React, { useState } from 'react';
import Head from 'next/head';
import { usePatients } from '../hooks/usePatients';
import { column } from '../types/columns';
import styles from '../styles/Table.module.css';

const CUTOFF_DATE = new Date('1960-01-01');

const isOlderThanCutoff = (date: string): boolean => {
	const dob = new Date(date);
	return dob < CUTOFF_DATE;
};

export default function Home(): JSX.Element {
	const { patients, loading, error } = usePatients();
	const [sortKey, setSortKey] = useState<column>();
	const [nameFilter, setNameFilter] = useState<string>('');

	if (loading) return <div>Loading...</div>;
	if (error) return <div>Error: {error.message}</div>;

	const filteredPatients = [...patients].filter((patient) => {
		const fullName = `${patient.firstName} ${patient.lastName}`;
		return fullName.toLowerCase().includes(nameFilter.toLowerCase());
	});

	const sortedPatients = filteredPatients.sort((a, b) => {
		if (!sortKey) {
			return 0;
		}

		if (sortKey === 'name') {
			return `${a.firstName} ${a.lastName}`.localeCompare(
				`${b.firstName} ${b.lastName}`
			);
		}

		return a[sortKey].localeCompare(b[sortKey]);
	});

	return (
		<>
			<Head>
				<title>Stitch Health - Patients Dashboard</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<header>
				<h1>Patients</h1>
				<div>
					<label htmlFor="nameFilter">Filter by name: </label>
					<input
						id="nameFilter"
						type="text"
						value={nameFilter}
						onChange={(e) => setNameFilter(e.target.value)}
						placeholder="Enter name..."
					/>
				</div>
				<div>
					<label htmlFor="sort">Sort by: </label>
					<select
						id="sort"
						value={sortKey}
						onChange={(e) => setSortKey(e.target.value as column)}
					>
						<option value="name">Name</option>
						<option value="id">ID</option>
						<option value="dateOfBirth">Date of Birth</option>
						<option value="dateOfRegistration">Registration Date</option>
					</select>
				</div>
			</header>
			<main>
				<table className={styles.table}>
					<thead>
						<tr>
							<th>Name</th>
							<th>ID</th>
							<th>Date of birth</th>
							<th>Registration date</th>
						</tr>
					</thead>
					<tbody>
						{sortedPatients.map((patient) => (
							<tr
								key={patient.id}
								style={
									isOlderThanCutoff(patient.dateOfBirth)
										? { color: 'blue' }
										: {}
								}
							>
								<td>{`${patient.firstName} ${patient.lastName}`}</td>
								<td>{patient.id}</td>
								<td>{patient.dateOfBirth}</td>
								<td>{patient.dateOfRegistration}</td>
							</tr>
						))}
					</tbody>
				</table>
			</main>
		</>
	);
}
